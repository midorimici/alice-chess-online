/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./config.ts":
/*!*******************!*\
  !*** ./config.ts ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__,\n/* harmony export */   \"Vec\": () => /* binding */ Vec\n/* harmony export */ });\nvar __values = (undefined && undefined.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    ivory: 'rgb(240, 227, 206)',\n    buff: 'rgb(179, 147, 105)',\n    dark: 'rgb(30, 30, 30)',\n    red: 'rgb(200, 0, 0)',\n    blue: 'rgb(0, 0, 200)',\n    grey: 'rgb(150, 150, 150)',\n    safe: 'rgb(121, 202, 68)',\n    squareSize: 9 / 80,\n    margin: 1 / 20,\n    opponent: { 'W': 'B', 'B': 'W' },\n    rotateBoard: \n    /**\n    * 盤面を変換する\n    * @param boards 変換元の盤面\n    */\n    function (boards) {\n        var e_1, _a;\n        var orig = boards;\n        var res = new Map();\n        try {\n            for (var _b = __values(orig.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), pos = _d[0], piece = _d[1];\n                var _e = __read(pos.split(',').map(function (e) { return +e; }), 3), b = _e[0], x = _e[1], y = _e[2];\n                res.set(b + \",\" + (7 - x) + \",\" + (7 - y), piece);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n});\n/**\n * @classdesc 二次元ベクトルの計算を補助する\n */\nvar Vec = /** @class */ (function () {\n    /**\n     * @param v 二数の配列\n     */\n    function Vec(v) {\n        this.v = v;\n    }\n    /**\n     * Vec インスタンスから二数の配列を返す\n     */\n    Vec.prototype.val = function () {\n        return this.v;\n    };\n    /**\n     * ベクトルに加算する\n     * @param v 加算する数またはベクトル\n     */\n    Vec.prototype.add = function (v) {\n        if (Array.isArray(v)) {\n            return new Vec([v[0] + this.v[0], v[1] + this.v[1]]);\n        }\n        else {\n            return new Vec([v + this.v[0], v + this.v[1]]);\n        }\n    };\n    /**\n     * ベクトルに乗算する\n     * @param n 乗ずる数\n     */\n    Vec.prototype.mul = function (n) {\n        return new Vec([n * this.v[0], n * this.v[1]]);\n    };\n    /**\n     * ベクトルに除算する\n     * @param n 除する数\n     */\n    Vec.prototype.div = function (n) {\n        return new Vec([this.v[0] / n, this.v[1] / n]);\n    };\n    /**\n     * ベクトルに除算した商を返す\n     * @param n 除する数\n     */\n    Vec.prototype.quot = function (n) {\n        return new Vec([Math.floor(this.v[0] / n), Math.floor(this.v[1] / n)]);\n    };\n    return Vec;\n}());\n\n\n\n//# sourceURL=webpack://alice-chess-online/./config.ts?");

/***/ }),

/***/ "./src/chat.ts":
/*!*********************!*\
  !*** ./src/chat.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n// チャット\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (function (socket, isEN) {\n    var chatForm = document.getElementById('chat-form');\n    var chatInput = document.getElementById('chat-input');\n    var chatSendButton = document.getElementById('chat-send-icon');\n    chatForm.addEventListener('submit', function (e) {\n        e.preventDefault();\n        if (chatInput.value) {\n            socket.emit('chat message', chatInput.value);\n            chatInput.value = '';\n        }\n    });\n    chatSendButton.onclick = function () {\n        if (chatInput.value) {\n            socket.emit('chat message', chatInput.value);\n            chatInput.value = '';\n        }\n    };\n    var ul = document.getElementById('chat-messages');\n    socket.on('chat message', \n    /**\n     * チャット受信の処理\n     * @param msg 入力されたメッセージ\n     * @param isPlayer 入力した人が対戦者か\n     * @param name 入力した人の名前\n     */\n    function (msg, isPlayer, name) {\n        var item = document.createElement('li');\n        var nameSpan = document.createElement('span');\n        nameSpan.className = 'chat-name';\n        nameSpan.innerText = name;\n        if (isPlayer) {\n            var icon = document.createElement('img');\n            icon.className = 'chat-player-icon';\n            icon.src = '../static/svg/ghost-solid.svg';\n            icon.alt = 'player-icon';\n            icon.title = isEN ? 'Player' : '対戦者';\n            nameSpan.appendChild(icon);\n        }\n        item.appendChild(nameSpan);\n        var msgSpan = document.createElement('span');\n        msgSpan.innerText = msg;\n        item.appendChild(msgSpan);\n        ul.appendChild(item);\n        ul.scrollTop = ul.scrollHeight;\n    });\n});\n\n\n//# sourceURL=webpack://alice-chess-online/./src/chat.ts?");

/***/ }),

/***/ "./src/client.ts":
/*!***********************!*\
  !*** ./src/client.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _draw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./draw */ \"./src/draw.ts\");\n/* harmony import */ var _mouse__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mouse */ \"./src/mouse.ts\");\n/* harmony import */ var _svr_piece__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../svr/piece */ \"./svr/piece.ts\");\n/* harmony import */ var _chat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chat */ \"./src/chat.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (undefined && undefined.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n\n\n\n\n/** 言語が英語である */\nvar isEN = location.pathname === '/en/';\n// 入室～対戦相手待機\nvar draw;\n/** initCanvas を実行済か */\nvar doneInitCanvas = false;\n/** canvas 要素 */\nvar canvass = Array.from(document.getElementsByClassName('canvas'));\n/** canvas 横のメッセージ */\nvar gameMessage = document.getElementById('game-message');\n/** ミュートボタン */\nvar muteButton = document.getElementById('mute-icon');\n/** 駒表示ボタン */\nvar showHideButton = document.getElementById('eye-icon');\n/** ミュート状態か */\nvar muted = true;\n/** 反対側の盤面の駒を表示するか */\nvar showOppositePieces = true;\n/** 入力フォームを非表示にし、canvas などを表示する */\nvar initCanvas = function () { return __awaiter(void 0, void 0, void 0, function () {\n    var cw, ch, max, cvsize, canvass_1, canvass_1_1, canvas;\n    var e_1, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                document.getElementById('settings').style.display = 'none';\n                cw = document.documentElement.clientWidth;\n                ch = document.documentElement.clientHeight;\n                if (cw < ch || ch < 720) {\n                    document.getElementById('logo').style.display = 'none';\n                    document.getElementById('info-icon').style.display = 'none';\n                    document.getElementsByTagName('footer')[0].style.display = 'none';\n                }\n                max = cw < ch ? ch : cw;\n                cvsize = (0.4 * max).toString();\n                try {\n                    for (canvass_1 = __values(canvass), canvass_1_1 = canvass_1.next(); !canvass_1_1.done; canvass_1_1 = canvass_1.next()) {\n                        canvas = canvass_1_1.value;\n                        canvas.setAttribute('width', cvsize);\n                        canvas.setAttribute('height', cvsize);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (canvass_1_1 && !canvass_1_1.done && (_a = canvass_1.return)) _a.call(canvass_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                return [4 /*yield*/, _draw__WEBPACK_IMPORTED_MODULE_0__.default.init(canvass)];\n            case 1:\n                draw = _b.sent();\n                doneInitCanvas = true;\n                document.getElementById('game-container').style.display = 'flex';\n                return [2 /*return*/];\n        }\n    });\n}); };\n/** 対戦者か観戦者か */\nvar myrole;\n/** 自分のユーザ名 */\nvar myname;\n// フォーム取得\n// production: io('https://geister-online.herokuapp.com')\nvar socket = io();\nvar form = document.getElementById('form');\nform.addEventListener('submit', function (e) {\n    e.preventDefault();\n    var data = new FormData(form);\n    var info = {\n        roomId: data.get('room'),\n        role: data.get('role'),\n        name: data.get('username') === ''\n            ? (isEN ? 'anonymous' : '名無し')\n            : data.get('username'),\n    };\n    myrole = info.role;\n    myname = info.name;\n    socket.emit('enter room', info);\n}, false);\n// 部屋がいっぱいだったとき\nsocket.on('room full', /** @param id 部屋番号 */ function (id) {\n    var p = document.getElementById('message');\n    p.innerText = isEN\n        ? \"The room \" + id + \" is full. You cannot join in as a player.\"\n        : \"\\u30EB\\u30FC\\u30E0 \" + id + \" \\u306F\\u3044\\u3063\\u3071\\u3044\\u3067\\u3059\\u3002\\u5BFE\\u6226\\u8005\\u3068\\u3057\\u3066\\u53C2\\u52A0\\u3059\\u308B\\u3053\\u3068\\u306F\\u3067\\u304D\\u307E\\u305B\\u3093\\u3002\";\n});\n// 空室を観戦しようとしたとき\nsocket.on('no room', /** @param id 部屋番号 */ function (id) {\n    var p = document.getElementById('message');\n    p.innerText = isEN\n        ? \"No player is present in the room \" + id + \".\"\n        : \"\\u30EB\\u30FC\\u30E0 \" + id + \" \\u3067\\u306F\\u5BFE\\u6226\\u304C\\u884C\\u308F\\u308C\\u3066\\u3044\\u307E\\u305B\\u3093\\u3002\";\n});\n// 対戦相手を待っているとき\nsocket.on('wait opponent', function () {\n    if (!doneInitCanvas)\n        initCanvas();\n    gameMessage.innerText = isEN\n        ? 'Waiting for the opponent...'\n        : '対戦相手の入室を待っています...';\n});\n// ゲーム進行\nvar mouse;\n/**\n * 音声を再生する\n * @param file ファイル名。拡張子除く\n */\nvar snd = function (file) {\n    new Audio(\"../static/sounds/\" + file + \".wav\").play();\n};\n// 対戦者の処理\nsocket.on('game', \n/**\n * 対戦者側のゲーム処理\n * @param boards 盤面データ\n * @param color 自分の駒色\n * @param myturn 現在自分のターンか\n * @param first 先手のプレイヤー名\n * @param second 後手のプレイヤー名\n * @param checked どちらかがチェックされているか\n * @param takenPieces それぞれが取った駒の色と数\n */\nfunction (boards, color, myturn, first, second, checked, takenPieces) { return __awaiter(void 0, void 0, void 0, function () {\n    var boardsMap, selectingPos, opponent, _loop_1, _a, _b, _c, index, canvas, canvass_2, canvass_2_1, canvas;\n    var e_2, _d, e_3, _e;\n    return __generator(this, function (_f) {\n        switch (_f.label) {\n            case 0:\n                boardsMap = new Map(boards);\n                // 対戦者名表示\n                if (document.getElementById('user-names').innerText === '') {\n                    opponent = color === 'W' ? second : first;\n                    document.getElementById('user-names').innerText\n                        = \"\\u2191 \" + opponent + \"\\n\\u2193 \" + myname;\n                }\n                if (!!doneInitCanvas) return [3 /*break*/, 2];\n                return [4 /*yield*/, initCanvas()];\n            case 1:\n                _f.sent();\n                _f.label = 2;\n            case 2:\n                draw.board(boardsMap, color, showOppositePieces);\n                showHideButton.onclick = function () { return toggleShowHide(boardsMap, color); };\n                //draw.takenPieces(takenPieces, turn);\n                // 手番の表示\n                // マウスコールバック\n                if (myturn) {\n                    gameMessage.innerText = isEN ? \"It's your turn.\" : 'あなたの番です。';\n                    if (!muted)\n                        snd('move');\n                    _loop_1 = function (index, canvas) {\n                        mouse = new _mouse__WEBPACK_IMPORTED_MODULE_1__.default(canvas);\n                        canvas.onclick = function (e) {\n                            var _a;\n                            var sqPos = mouse.getCoord(e);\n                            if (((_a = boardsMap.get(index + \",\" + String(sqPos))) === null || _a === void 0 ? void 0 : _a[0]) === color) {\n                                // 自分の駒を選択したとき\n                                selectingPos = sqPos;\n                                var pieceClass = _svr_piece__WEBPACK_IMPORTED_MODULE_2__.abbrPieceDict[boardsMap.get(index + \",\" + String(sqPos))[1]];\n                                var piece = new pieceClass(color, index);\n                                // 行先を描画\n                                draw.board(boardsMap, color, showOppositePieces);\n                                draw.dest(piece, selectingPos, boardsMap);\n                                //draw.takenPieces(takenPieces, turn);\n                            }\n                            else {\n                                if (boardsMap.has(index + \",\" + String(selectingPos))) {\n                                    var pieceClass = _svr_piece__WEBPACK_IMPORTED_MODULE_2__.abbrPieceDict[boardsMap.get(index + \",\" + String(selectingPos))[1]];\n                                    var piece = new pieceClass(color, index);\n                                    if (piece.validMoves(selectingPos, boardsMap)\n                                        .some(function (e) { return String(e) === String(sqPos); })) {\n                                        // 行先を選択したとき\n                                        if (!muted)\n                                            snd('move');\n                                        // サーバへ移動データを渡す\n                                        socket.emit('move piece', index, selectingPos, sqPos);\n                                    }\n                                }\n                                // 盤面描画更新\n                                draw.board(boardsMap, color, showOppositePieces);\n                                //draw.takenPieces(takenPieces, turn);\n                                selectingPos = null;\n                            }\n                        };\n                    };\n                    try {\n                        for (_a = __values(canvass.entries()), _b = _a.next(); !_b.done; _b = _a.next()) {\n                            _c = __read(_b.value, 2), index = _c[0], canvas = _c[1];\n                            _loop_1(index, canvas);\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_b && !_b.done && (_d = _a.return)) _d.call(_a);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n                else {\n                    gameMessage.innerText = isEN ? \"It's your opponent's turn.\" : '相手の番です。';\n                    try {\n                        for (canvass_2 = __values(canvass), canvass_2_1 = canvass_2.next(); !canvass_2_1.done; canvass_2_1 = canvass_2.next()) {\n                            canvas = canvass_2_1.value;\n                            canvas.onclick = function () { };\n                        }\n                    }\n                    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                    finally {\n                        try {\n                            if (canvass_2_1 && !canvass_2_1.done && (_e = canvass_2.return)) _e.call(canvass_2);\n                        }\n                        finally { if (e_3) throw e_3.error; }\n                    }\n                }\n                // チェック表示\n                if (checked) {\n                    gameMessage.innerHTML = (isEN ? \"Check!\" : 'チェック！') + '<br>'\n                        + gameMessage.innerText;\n                    if (!muted)\n                        snd('check');\n                }\n                return [2 /*return*/];\n        }\n    });\n}); });\n// 観戦者の処理\nsocket.on('watch', \n/**\n * 観戦者側のゲーム処理\n * @param boards 盤面データ\n * @param first 先手のプレイヤー名\n * @param second 後手のプレイヤー名\n * @param turn 現在のターン\n * @param checked どちらかがチェックされているか\n * @param takenPieces それぞれが取った駒の色と数\n */\nfunction (boards, first, second, turn, checked, takenPieces) { return __awaiter(void 0, void 0, void 0, function () {\n    var boardsMap_1, curPlayer;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (!(myrole === 'watch')) return [3 /*break*/, 3];\n                boardsMap_1 = new Map(boards);\n                // 対戦者名表示\n                if (document.getElementById('user-names').innerText === '') {\n                    document.getElementById('user-names').innerText\n                        = \"\\u2191 \" + second + \"\\n\\u2193 \" + first;\n                }\n                // チェック表示\n                if (checked) {\n                    gameMessage.innerHTML = (isEN ? \"Check!\" : 'チェック！') + '<br>'\n                        + gameMessage.innerText;\n                }\n                if (!!doneInitCanvas) return [3 /*break*/, 2];\n                return [4 /*yield*/, initCanvas()];\n            case 1:\n                _a.sent();\n                _a.label = 2;\n            case 2:\n                draw.board(boardsMap_1, 'W', showOppositePieces);\n                showHideButton.onclick = function () { return toggleShowHide(boardsMap_1, 'W'); };\n                curPlayer = turn === 0 ? first : second;\n                gameMessage.innerText = isEN\n                    ? \"It's \" + curPlayer + \"'s turn.\"\n                    : curPlayer + \" \\u3055\\u3093\\u306E\\u756A\\u3067\\u3059\\u3002\";\n                if (!muted)\n                    snd('move');\n                // チェック表示\n                if (checked) {\n                    gameMessage.innerHTML = (isEN ? \"Check!\" : 'チェック！') + '<br>'\n                        + gameMessage.innerText;\n                    if (!muted)\n                        snd('check');\n                }\n                _a.label = 3;\n            case 3: return [2 /*return*/];\n        }\n    });\n}); });\n// 勝者が決まったとき\nsocket.on('tell winner', \n/** 勝者が決まったときの処理\n * @param winner 勝者のプレイヤー名。undefined なら引き分け\n*/\nfunction (winner) {\n    if (winner === undefined) {\n        gameMessage.innerText = (isEN ? \"Draw!\" : '引き分け！');\n    }\n    else {\n        gameMessage.innerHTML = (isEN ? \"Checkmate!\" : 'チェックメイト！') + '<br>'\n            + (isEN ? winner + \" won!\" : winner + \" \\u306E\\u52DD\\u3061\\uFF01\");\n    }\n    if (!muted)\n        snd('win');\n});\n// 接続が切れたとき\nsocket.on('player discon', \n/** @param name 接続が切れたプレイヤー名 */ function (name) {\n    alert(isEN\n        ? name + \"'s connection is closed.\"\n        : name + \" \\u3055\\u3093\\u306E\\u63A5\\u7D9A\\u304C\\u5207\\u308C\\u307E\\u3057\\u305F\\u3002\");\n    location.reload();\n});\n// ミュートボタン\nmuteButton.onclick = function () {\n    muteButton.src = muted\n        ? '../static/svg/volume-up-solid.svg'\n        : '../static/svg/volume-mute-solid.svg';\n    muteButton.title = muted\n        ? (isEN ? 'Mute' : 'ミュート')\n        : (isEN ? 'Unmute' : 'ミュート解除');\n    muted = !muted;\n};\n// 駒表示ボタン\nvar toggleShowHide = function (boardsMap, color) {\n    showHideButton.src = showOppositePieces\n        ? '../static/svg/eye-slash-regular.svg'\n        : '../static/svg/eye-regular.svg';\n    showHideButton.title = showOppositePieces\n        ? (isEN ? 'Show pieces in opposite board' : '反対側の盤面の駒を表示する')\n        : (isEN ? 'Hide pieces in opposite board' : '反対側の盤面の駒を隠す');\n    showOppositePieces = !showOppositePieces;\n    draw.board(boardsMap, color, showOppositePieces);\n};\n// info ボタン\nvar infoBtn = document.getElementById('info-icon');\ninfoBtn.onclick = function () {\n    document.getElementById('info-overlay').style.display = 'flex';\n};\nvar infoCloseBtn = document.getElementById('close-icon');\ninfoCloseBtn.onclick = function () {\n    document.getElementById('info-overlay').style.display = 'none';\n};\n// チャット\n(0,_chat__WEBPACK_IMPORTED_MODULE_3__.default)(socket, isEN);\n\n\n//# sourceURL=webpack://alice-chess-online/./src/client.ts?");

/***/ }),

/***/ "./src/draw.ts":
/*!*********************!*\
  !*** ./src/draw.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config */ \"./config.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (undefined && undefined.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (undefined && undefined.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\n\nvar Draw = /** @class */ (function () {\n    /**\n     * - canvas サイズ設定\n     * - context 作成\n     * - プロパティ定義\n     */\n    function Draw(canvass) {\n        this.imgs = new Map();\n        this.canvass = canvass;\n        this.ctxs = canvass.map(function (e) { return e.getContext('2d'); });\n        this.squareSize = canvass[0].width * _config__WEBPACK_IMPORTED_MODULE_0__.default.squareSize;\n        this.margin = canvass[0].width * _config__WEBPACK_IMPORTED_MODULE_0__.default.margin;\n    }\n    /**\n     * 非同期処理のためのコンストラクタ代用\n     * @param canvass 2つのキャンバスの配列\n     */\n    Draw.init = function (canvass) {\n        return __awaiter(this, void 0, void 0, function () {\n            var draw, pieces, _a, _b, color, _c, _d, name_1, imgs, i;\n            var e_1, _e, e_2, _f;\n            return __generator(this, function (_g) {\n                switch (_g.label) {\n                    case 0:\n                        draw = new Draw(canvass);\n                        pieces = [];\n                        try {\n                            for (_a = __values('WB'), _b = _a.next(); !_b.done; _b = _a.next()) {\n                                color = _b.value;\n                                try {\n                                    for (_c = (e_2 = void 0, __values('NBRQKP')), _d = _c.next(); !_d.done; _d = _c.next()) {\n                                        name_1 = _d.value;\n                                        pieces.push([color, name_1]);\n                                    }\n                                }\n                                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                                finally {\n                                    try {\n                                        if (_d && !_d.done && (_f = _c.return)) _f.call(_c);\n                                    }\n                                    finally { if (e_2) throw e_2.error; }\n                                }\n                            }\n                        }\n                        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                        finally {\n                            try {\n                                if (_b && !_b.done && (_e = _a.return)) _e.call(_a);\n                            }\n                            finally { if (e_1) throw e_1.error; }\n                        }\n                        return [4 /*yield*/, Promise.all(pieces.map(function (_a) {\n                                var _b = __read(_a, 2), color = _b[0], name = _b[1];\n                                return draw.loadImg(color, name);\n                            }))];\n                    case 1:\n                        imgs = _g.sent();\n                        for (i = 0; i < 12; i++) {\n                            draw.imgs.set(pieces[i].join(''), imgs[i]);\n                        }\n                        return [2 /*return*/, draw];\n                }\n            });\n        });\n    };\n    /**\n     * 駒の画像を読み込む\n     * @param color 駒色\n     * @param name 駒の名前\n     */\n    Draw.prototype.loadImg = function (color, name) {\n        return new Promise(function (resolve) {\n            var img = new Image();\n            img.onload = function () { return resolve(img); };\n            img.src = \"../static/img/\" + color + name + \".png\";\n        });\n    };\n    /**\n     * 画像を描画\n     * @param pos 描画する位置。'盤面,x,y'\n     * @param piece 描画する駒の名前。'WB'など\n     * @param showOppositePieces 反対側の盤面の駒を表示するか\n     */\n    Draw.prototype.drawImg = function (posStr, piece, showOppositePieces) {\n        var squareSize = this.squareSize;\n        var pos = posStr.split(',').map(function (e) { return +e; });\n        var anotherCtx = this.ctxs[1 - pos[0]];\n        var img = this.imgs.get(piece);\n        this.ctxs[pos[0]].drawImage(img, 0, 0, img.width, img.height, this.margin + squareSize * pos[1], this.margin + squareSize * pos[2], squareSize, squareSize);\n        if (showOppositePieces) {\n            anotherCtx.save();\n            anotherCtx.globalAlpha = 0.2;\n            anotherCtx.drawImage(img, 0, 0, img.width, img.height, this.margin + squareSize * pos[1], this.margin + squareSize * pos[2], squareSize, squareSize);\n            anotherCtx.restore();\n        }\n    };\n    /** アイボリーで画面全体を塗りつぶす */\n    Draw.prototype.clearCanvas = function () {\n        for (var i = 0; i < 2; i++) {\n            this.ctxs[i].fillStyle = _config__WEBPACK_IMPORTED_MODULE_0__.default.ivory;\n            this.ctxs[i].fillRect(0, 0, this.canvass[i].width, this.canvass[i].height);\n        }\n    };\n    /**\n     * 一辺 squareSize のグリッドを描く\n     * @param coord 左上の座標。ウィンドウ座標\n     * @param col 列数\n     * @param row 行数\n     */\n    Draw.prototype.grid = function (ctx) {\n        var squareSize = this.squareSize;\n        var coord = [this.margin, this.margin];\n        // マス目を描く\n        ctx.fillStyle = _config__WEBPACK_IMPORTED_MODULE_0__.default.buff;\n        for (var i = 0; i < 8; i++) {\n            for (var j = 0; j < 8; j++) {\n                if ((i + j) % 2) {\n                    ctx.fillRect.apply(ctx, __spread(new _config__WEBPACK_IMPORTED_MODULE_0__.Vec([i, j]).mul(squareSize).add(coord).val(), [squareSize, squareSize]));\n                }\n            }\n        }\n        // 線を描く\n        ctx.strokeStyle = _config__WEBPACK_IMPORTED_MODULE_0__.default.dark;\n        ctx.lineWidth = 2;\n        ctx.beginPath();\n        for (var i = 0; i <= 8; i++) {\n            ctx.moveTo.apply(ctx, __spread(new _config__WEBPACK_IMPORTED_MODULE_0__.Vec(coord).add([0, squareSize * i]).val()));\n            ctx.lineTo.apply(ctx, __spread(new _config__WEBPACK_IMPORTED_MODULE_0__.Vec(coord).add([squareSize * 8, squareSize * i]).val()));\n        }\n        for (var i = 0; i <= 8; i++) {\n            ctx.moveTo.apply(ctx, __spread(new _config__WEBPACK_IMPORTED_MODULE_0__.Vec(coord).add([squareSize * i, 0]).val()));\n            ctx.lineTo.apply(ctx, __spread(new _config__WEBPACK_IMPORTED_MODULE_0__.Vec(coord).add([squareSize * i, squareSize * 8]).val()));\n        }\n        ctx.closePath();\n        ctx.stroke();\n    };\n    /**\n     * ボタンを描く\n     * @param coord 位置。ウィンドウ座標\n     * @param size 幅と高さ\n     * @param disabled 押せなくする\n     */\n    /*\n    private button(coord: [number, number], size: [number, number],\n            disabled: boolean) {\n        const ctx = this.ctx;\n\n        ctx.fillStyle = disabled ?\n            'rgb(160, 140, 120)' : 'rgb(200, 180, 160)';\n        ctx.fillRect(...coord, ...size);\n\n        ctx.font = `${this.canvas.width/30}px Meiryo`;\n        ctx.save();\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillStyle = config.dark;\n        ctx.fillText('OK',\n            ...new Vec(size).div(2).add(coord).val());\n        ctx.restore();\n    }\n    */\n    /** ゲームボードと盤面上の駒を描く\n     * @param boardmap 盤面データ\n     * @param color 駒色。先手後手どちら目線か\n     * @param showOppositePieces 反対側の盤面の駒を表示するか\n     */\n    Draw.prototype.board = function (boardsMap, color, showOppositePieces) {\n        var e_3, _a, e_4, _b;\n        this.clearCanvas();\n        var ctxs = this.ctxs;\n        try {\n            // グリッド\n            for (var ctxs_1 = __values(ctxs), ctxs_1_1 = ctxs_1.next(); !ctxs_1_1.done; ctxs_1_1 = ctxs_1.next()) {\n                var ctx = ctxs_1_1.value;\n                this.grid(ctx);\n                // ファイル・ランク\n                var textSize = this.squareSize / 3;\n                ctx.fillStyle = _config__WEBPACK_IMPORTED_MODULE_0__.default.dark;\n                ctx.font = textSize + \"px Meiryo\";\n                ctx.textAlign = 'center';\n                ctx.textBaseline = 'middle';\n                for (var i = 0; i < 8; i++) {\n                    ctx.fillText(String.fromCodePoint(i + 97), (color === 'W' ? i + 1 : 8 - i) * this.squareSize, this.canvass[0].height - this.margin / 2);\n                    ctx.fillText(\"\" + (8 - i), this.margin / 2, (color === 'W' ? i + 1 : 8 - i) * this.squareSize);\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (ctxs_1_1 && !ctxs_1_1.done && (_a = ctxs_1.return)) _a.call(ctxs_1);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        try {\n            // 駒\n            for (var _c = __values(boardsMap.entries()), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var _e = __read(_d.value, 2), pos = _e[0], piece = _e[1];\n                this.drawImg(pos, piece, showOppositePieces);\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n    };\n    /**\n     * 駒の行先を円で表示する\n     * @param piece 駒インスタンス\n     * @param pos 位置。ゲーム内座標\n     * @param boardmap 盤面データ\n     */\n    Draw.prototype.dest = function (piece, pos, boardsMap) {\n        var e_5, _a;\n        var ctx = this.ctxs[piece.side];\n        try {\n            for (var _b = __values(piece.validMoves(pos, boardsMap)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var dest = _c.value;\n                var coord = new _config__WEBPACK_IMPORTED_MODULE_0__.Vec(dest).mul(this.squareSize)\n                    .add(this.margin + this.squareSize / 2).val();\n                ctx.beginPath();\n                ctx.arc.apply(ctx, __spread(coord, [this.squareSize / 4, 0, 2 * Math.PI]));\n                ctx.fillStyle = _config__WEBPACK_IMPORTED_MODULE_0__.default.safe;\n                ctx.fill();\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n    };\n    return Draw;\n}());\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Draw);\n;\n\n\n//# sourceURL=webpack://alice-chess-online/./src/draw.ts?");

/***/ }),

/***/ "./src/mouse.ts":
/*!**********************!*\
  !*** ./src/mouse.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config */ \"./config.ts\");\n\nvar Mouse = /** @class */ (function () {\n    function Mouse(canvas) {\n        this.squareSize = canvas.width * _config__WEBPACK_IMPORTED_MODULE_0__.default.squareSize;\n        this.margin = canvas.width * _config__WEBPACK_IMPORTED_MODULE_0__.default.margin;\n    }\n    /**\n     * キャンバス座標を取得する\n     * @param e マウスイベント\n     */\n    Mouse.prototype.getWindowPos = function (e) {\n        var rect = e.target.getBoundingClientRect();\n        return [e.clientX - rect.left, e.clientY - rect.top];\n    };\n    /**\n     * ウィンドウ座標をゲーム内座標に変換する\n     * @param pos ウィンドウ座標\n     */\n    Mouse.prototype.chcoord = function (pos) {\n        return new _config__WEBPACK_IMPORTED_MODULE_0__.Vec(pos)\n            .add(-this.margin).quot(this.squareSize).val();\n    };\n    /**\n     * ゲーム内座標を取得する\n     * @param e マウスイベント\n     */\n    Mouse.prototype.getCoord = function (e) {\n        return this.chcoord(this.getWindowPos(e));\n    };\n    /**\n     * (x, y) が指定範囲内にあるか\n     * @param x 位置\n     * @param y 位置\n     * @param left 左端\n     * @param top 上端\n     * @param w 幅\n     * @param h 高さ\n     */\n    Mouse.prototype.onArea = function (x, y, left, top, w, h) {\n        return left <= x && x <= left + w && top <= y && y <= top + h;\n    };\n    return Mouse;\n}());\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Mouse);\n\n\n//# sourceURL=webpack://alice-chess-online/./src/mouse.ts?");

/***/ }),

/***/ "./svr/game.ts":
/*!*********************!*\
  !*** ./svr/game.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isChecked\": () => /* binding */ isChecked,\n/* harmony export */   \"cannotMove\": () => /* binding */ cannotMove,\n/* harmony export */   \"renewBoard\": () => /* binding */ renewBoard\n/* harmony export */ });\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config */ \"./config.ts\");\n/* harmony import */ var _piece__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./piece */ \"./svr/piece.ts\");\n// ゲーム進行に関わる処理\nvar __values = (undefined && undefined.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n\n\n/**\n * color 側がチェックされているか\n * @param color 駒色\n * @param boards color の相手側から見た盤面\n */\nvar isChecked = function (color, boards) {\n    var e_1, _a, e_2, _b, e_3, _c;\n    var targetPos;\n    var enemies = new Map();\n    try {\n        // キングを探す\n        for (var _d = __values(boards.entries()), _e = _d.next(); !_e.done; _e = _d.next()) {\n            var _f = __read(_e.value, 2), pos = _f[0], piece = _f[1];\n            if (piece === color + 'K') {\n                targetPos = pos.split(',').map(function (e) { return +e; });\n                break;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    try {\n        // キングと同じ盤面上にある異色の駒を集める\n        for (var _g = __values(boards.entries()), _h = _g.next(); !_h.done; _h = _g.next()) {\n            var _j = __read(_h.value, 2), pos = _j[0], piece = _j[1];\n            if (targetPos[0] === +pos[0] && piece[0] !== color) {\n                var enemyPos = pos.split(',').map(function (e) { return +e; });\n                enemies.set([enemyPos[1], enemyPos[2]], new _piece__WEBPACK_IMPORTED_MODULE_1__.abbrPieceDict[piece[1]](_config__WEBPACK_IMPORTED_MODULE_0__.default.opponent[color], +pos[0]));\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (_h && !_h.done && (_b = _g.return)) _b.call(_g);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    try {\n        // 同盤面上の敵駒でキングを攻撃しているものがあるか\n        for (var _k = __values(enemies.entries()), _l = _k.next(); !_l.done; _l = _k.next()) {\n            var _m = __read(_l.value, 2), pos = _m[0], piece = _m[1];\n            if (~piece.coveringSquares(pos, boards).map(function (e) { return String(e); })\n                .indexOf(String(targetPos.slice(1)))) {\n                return true;\n            }\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (_l && !_l.done && (_c = _k.return)) _c.call(_k);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    return false;\n};\n/**\n * color 側が駒を動かせないとき true を返す\n * @param color 駒色\n * @param boards color 側から見た盤面\n */\nvar cannotMove = function (color, boards) {\n    var e_4, _a, e_5, _b;\n    try {\n        for (var _c = __values(boards.entries()), _d = _c.next(); !_d.done; _d = _c.next()) {\n            var _e = __read(_d.value, 2), posStr = _e[0], pieceName = _e[1];\n            if (color === pieceName[0]) {\n                var pos = posStr.split(',').map(function (e) { return +e; });\n                var piece = new _piece__WEBPACK_IMPORTED_MODULE_1__.abbrPieceDict[pieceName[1]](color, pos[0]);\n                try {\n                    for (var _f = (e_5 = void 0, __values(piece.validMoves([pos[1], pos[2]], boards))), _g = _f.next(); !_g.done; _g = _f.next()) {\n                        var dest = _g.value;\n                        // 駒の各移動先について、移動後にチェック回避できるなら false\n                        var tmpBoards = new Map(boards);\n                        renewBoard(pos[0], [pos[1], pos[2]], dest, tmpBoards);\n                        if (!isChecked(color, _config__WEBPACK_IMPORTED_MODULE_0__.default.rotateBoard(tmpBoards)))\n                            return false;\n                    }\n                }\n                catch (e_5_1) { e_5 = { error: e_5_1 }; }\n                finally {\n                    try {\n                        if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\n                    }\n                    finally { if (e_5) throw e_5.error; }\n                }\n            }\n        }\n    }\n    catch (e_4_1) { e_4 = { error: e_4_1 }; }\n    finally {\n        try {\n            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n        }\n        finally { if (e_4) throw e_4.error; }\n    }\n    return true;\n};\n/**\n * 駒を移動して盤面を更新する\n * @param boardId 駒の移動前の盤面がどちらか\n * @param startpos 駒の移動前の位置\n * @param endpos 駒の移動後の位置\n * @param boards 盤面\n */\nvar renewBoard = function (boardId, startpos, endpos, boards) {\n    // 駒移動\n    boards.set(1 - boardId + \",\" + String(endpos), boards.get(boardId + \",\" + String(startpos)));\n    boards.delete(boardId + \",\" + String(startpos));\n    // 敵駒があったら削除\n    boards.delete(boardId + \",\" + String(endpos));\n};\n\n\n\n//# sourceURL=webpack://alice-chess-online/./svr/game.ts?");

/***/ }),

/***/ "./svr/piece.ts":
/*!**********************!*\
  !*** ./svr/piece.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Piece\": () => /* binding */ Piece,\n/* harmony export */   \"Knight\": () => /* binding */ Knight,\n/* harmony export */   \"Bishop\": () => /* binding */ Bishop,\n/* harmony export */   \"Rook\": () => /* binding */ Rook,\n/* harmony export */   \"Queen\": () => /* binding */ Queen,\n/* harmony export */   \"King\": () => /* binding */ King,\n/* harmony export */   \"Pawn\": () => /* binding */ Pawn,\n/* harmony export */   \"abbrPieceDict\": () => /* binding */ abbrPieceDict\n/* harmony export */ });\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config */ \"./config.ts\");\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./game */ \"./svr/game.ts\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __values = (undefined && undefined.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n\n\nvar Piece = /** @class */ (function () {\n    /**\n     * @param color 駒色\n     * @param name 駒の名前 'WB' など\n     * @param side 駒がどちらの盤にあるか\n     */\n    function Piece(color, side) {\n        this.color = color;\n        this.side = side;\n    }\n    /**\n     * 指定の位置が盤面内に収まっているか\n     * @param pos 位置\n     */\n    Piece.prototype.inBoard = function (pos) {\n        return pos[0] >= 0 && pos[0] < 8 && pos[1] >= 0 && pos[1] < 8;\n    };\n    /**\n     * 指定の位置に動かしてもよいか\n     * @param pos 位置\n     * @param boards 盤面\n     */\n    Piece.prototype.legal = function (pos, boards) {\n        var _a;\n        // 盤面内に収まる && 向こう側の盤面の対応する位置に駒がない && 行先に自分の駒がない\n        return this.inBoard(pos)\n            && boards.get(1 - this.side + \",\" + String(pos)) === undefined\n            && !(((_a = boards.get(this.side + \",\" + String(pos))) === null || _a === void 0 ? void 0 : _a[0]) === this.color);\n    };\n    /**\n     * 走り駒の行き先\n     * @param pos 駒の位置\n     * @param intervals 走る方向\n     * @param boards 盤面\n     */\n    Piece.prototype.rider = function (pos, intervals, boards) {\n        var e_1, _a;\n        var answers = [];\n        try {\n            for (var intervals_1 = __values(intervals), intervals_1_1 = intervals_1.next(); !intervals_1_1.done; intervals_1_1 = intervals_1.next()) {\n                var _b = __read(intervals_1_1.value, 2), dx = _b[0], dy = _b[1];\n                var xtmp = pos[0] + dx, ytmp = pos[1] + dy;\n                while (this.inBoard([xtmp, ytmp])) {\n                    var destThis = boards.get(this.side + \",\" + xtmp + \",\" + ytmp);\n                    var destThat = boards.get(1 - this.side + \",\" + xtmp + \",\" + ytmp);\n                    if (!destThat) {\n                        // 向こう側の盤のマスに何もない\n                        if (!destThis) {\n                            // こちら側の盤のマスに何もない\n                            answers.push([xtmp, ytmp]);\n                        }\n                        else if (destThis[0] !== this.color) {\n                            // 敵駒がある\n                            answers.push([xtmp, ytmp]);\n                            break;\n                        }\n                        else\n                            break;\n                    }\n                    xtmp += dx;\n                    ytmp += dy;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (intervals_1_1 && !intervals_1_1.done && (_a = intervals_1.return)) _a.call(intervals_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return answers;\n    };\n    /**\n     * チェック回避のための制限も含めた駒が動ける位置リストを返す\n     * @param pos 駒の現在位置\n     * @param boards 盤面\n     */\n    Piece.prototype.validMoves = function (pos, boards) {\n        var e_2, _a;\n        var result = [];\n        try {\n            for (var _b = __values(this.coveringSquares(pos, boards)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var dest = _c.value;\n                // 盤面の複製\n                var tmpBoards = new Map(boards);\n                // 盤面の更新\n                if (tmpBoards.get(this.side + \",\" + String(pos))[1] === 'K') {\n                    // 動かす駒がキングのとき\n                    // その盤面上で合法である（敵の効きに移動していない）\n                    var tmpBoards2 = new Map(boards);\n                    tmpBoards2.set(this.side + \",\" + String(dest), tmpBoards2.get(this.side + \",\" + String(pos)));\n                    tmpBoards2.delete(this.side + \",\" + String(pos));\n                    if (_game__WEBPACK_IMPORTED_MODULE_1__.isChecked(this.color, tmpBoards2))\n                        continue;\n                    // 向こうの盤面のその位置も敵の効きでない\n                }\n                _game__WEBPACK_IMPORTED_MODULE_1__.renewBoard(this.side, pos, dest, tmpBoards);\n                // チェックにならないなら結果に追加\n                if (!_game__WEBPACK_IMPORTED_MODULE_1__.isChecked(this.color, tmpBoards)) {\n                    result.push(dest);\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return result;\n    };\n    return Piece;\n}());\n\nvar Knight = /** @class */ (function (_super) {\n    __extends(Knight, _super);\n    function Knight() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.abbr = 'N';\n        return _this;\n    }\n    Knight.prototype.coveringSquares = function (pos, boards) {\n        var _this = this;\n        var dirList = [[1, 2], [2, 1], [2, -1], [1, -2],\n            [-1, -2], [-2, -1], [-2, 1], [-1, 2]];\n        return dirList\n            .map(function (e) { return new _config__WEBPACK_IMPORTED_MODULE_0__.Vec(pos).add(e).val(); })\n            .filter(function (dest) {\n            return _this.legal(dest, boards);\n        });\n    };\n    return Knight;\n}(Piece));\n\nvar Bishop = /** @class */ (function (_super) {\n    __extends(Bishop, _super);\n    function Bishop() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.abbr = 'B';\n        return _this;\n    }\n    Bishop.prototype.coveringSquares = function (pos, boards) {\n        return this.rider(pos, [[1, 1], [1, -1], [-1, -1], [-1, 1]], boards);\n    };\n    return Bishop;\n}(Piece));\n\nvar Rook = /** @class */ (function (_super) {\n    __extends(Rook, _super);\n    function Rook() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.abbr = 'R';\n        return _this;\n    }\n    Rook.prototype.coveringSquares = function (pos, boards) {\n        return this.rider(pos, [[1, 0], [0, -1], [-1, 0], [0, 1]], boards);\n    };\n    return Rook;\n}(Piece));\n\nvar Queen = /** @class */ (function (_super) {\n    __extends(Queen, _super);\n    function Queen() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.abbr = 'Q';\n        return _this;\n    }\n    Queen.prototype.coveringSquares = function (pos, boards) {\n        return this.rider(pos, [[1, 1], [1, -1], [-1, -1], [-1, 1], [1, 0], [0, -1], [-1, 0], [0, 1]], boards);\n    };\n    return Queen;\n}(Piece));\n\nvar King = /** @class */ (function (_super) {\n    __extends(King, _super);\n    function King() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.abbr = 'K';\n        return _this;\n    }\n    King.prototype.coveringSquares = function (pos, boards) {\n        var _this = this;\n        var dirList = [[1, 0], [1, -1], [0, -1], [-1, -1],\n            [-1, 0], [-1, 1], [0, 1], [1, 1]];\n        return dirList\n            .map(function (e) { return new _config__WEBPACK_IMPORTED_MODULE_0__.Vec(pos).add(e).val(); })\n            .filter(function (dest) {\n            return _this.legal(dest, boards);\n        });\n    };\n    return King;\n}(Piece));\n\nvar Pawn = /** @class */ (function (_super) {\n    __extends(Pawn, _super);\n    function Pawn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.abbr = 'P';\n        return _this;\n    }\n    Pawn.prototype.coveringSquares = function (pos, boards) {\n        var _a, _b;\n        var answers = [];\n        // 駒を取る動き\n        var target = new _config__WEBPACK_IMPORTED_MODULE_0__.Vec(pos).add([1, -1]).val();\n        if (((_a = boards.get(this.side + \",\" + String(target))) === null || _a === void 0 ? void 0 : _a[0]) === _config__WEBPACK_IMPORTED_MODULE_0__.default.opponent[this.color]) {\n            answers.push(target);\n        }\n        var target = new _config__WEBPACK_IMPORTED_MODULE_0__.Vec(pos).add([-1, -1]).val();\n        if (((_b = boards.get(this.side + \",\" + String(target))) === null || _b === void 0 ? void 0 : _b[0]) === _config__WEBPACK_IMPORTED_MODULE_0__.default.opponent[this.color]) {\n            answers.push(target);\n        }\n        // 一歩先\n        var target = new _config__WEBPACK_IMPORTED_MODULE_0__.Vec(pos).add([0, -1]).val();\n        if (!boards.has(this.side + \",\" + String(target)) && this.legal(target, boards)) {\n            answers.push(target);\n        }\n        // 二歩先（最初だけ）\n        var target2 = new _config__WEBPACK_IMPORTED_MODULE_0__.Vec(pos).add([0, -2]).val();\n        if (pos[1] === 6\n            && !boards.has(this.side + \",\" + String(target))\n            && !boards.has(this.side + \",\" + String(target2))\n            && this.legal(target2, boards)) {\n            answers.push(target2);\n        }\n        return answers;\n    };\n    return Pawn;\n}(Piece));\n\nvar abbrPieceDict = { 'N': Knight, 'B': Bishop, 'R': Rook, 'Q': Queen, 'K': King, 'P': Pawn };\n\n\n//# sourceURL=webpack://alice-chess-online/./svr/piece.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./src/client.ts");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;